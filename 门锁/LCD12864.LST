C51 COMPILER V9.60.0.0   LCD12864                                                          03/24/2023 19:33:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN LCD12864.OBJ
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE LCD12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include"LCD12864.h"
   4          /**************************************************************
   5          
   6          
   7                //串/并方式控制
   8          /*******************************************************************
   9                        常量声明区
  10          ********************************************************************/     
  11          unsigned char code AC_TABLE[]={                  //坐标编码
  12          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,
  13          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,
  14          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,
  15          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,
  16          };
  17          void SendByte(unsigned char Dbyte)
  18          {
  19   1        unsigned char i;
  20   1        for(i=0;i<8;i++)
  21   1        {
  22   2          SCK = 0;
  23   2          Dbyte=Dbyte<<1;
  24   2          SID = CY;
  25   2          SCK = 1;
  26   2          SCK = 0;
  27   2        }
  28   1      }
  29          /**********************************************************
  30                        接收一个字节
  31          ***********************************************************/
  32          
  33          unsigned char ReceiveByte(void)
  34          {
  35   1        unsigned char i,temp1,temp2;
  36   1        temp1=temp2=0;
  37   1        for(i=0;i<8;i++)
  38   1        {
  39   2          temp1=temp1<<1;
  40   2          SCK = 0;
  41   2          SCK = 1;                
  42   2          SCK = 0;
  43   2          if(SID) temp1++;
  44   2        }
  45   1        for(i=0;i<8;i++)
  46   1        {
  47   2          temp2=temp2<<1;
  48   2          SCK = 0;
  49   2          SCK = 1;
  50   2          SCK = 0;
  51   2          if(SID) temp2++;
  52   2        }
  53   1        return ((0xf0&temp1)+(0x0f&temp2));
  54   1      }
  55          /****************************************************************
C51 COMPILER V9.60.0.0   LCD12864                                                          03/24/2023 19:33:34 PAGE 2   

  56                                检查忙状态
  57          ******************************************************************/
  58          void CheckBusy( void )
  59          {
  60   1        do SendByte(0xfc);     //11111,RW(1),RS(0),0
  61   1        while(0x80&ReceiveByte());
  62   1      }
  63          
  64          /******************************************************************
  65                     写一个字节的指令
  66          *******************************************************************/
  67          void WriteCommand( unsigned char Cbyte )
  68          {
  69   1        CS = 1;
  70   1        CheckBusy();
  71   1        SendByte(0xf8);          //11111,RW(0),RS(0),0
  72   1        SendByte(0xf0&Cbyte);
  73   1        SendByte(0xf0&Cbyte<<4);
  74   1        CS = 0;
  75   1      }
  76          /*************************************************************
  77                           写一个字节的数据
  78          **************************************************************/
  79          void WriteData( unsigned char Dbyte )
  80          {
  81   1        CS = 1;
  82   1        CheckBusy();
  83   1        SendByte(0xfa);          //11111,RW(0),RS(1),0
  84   1        SendByte(0xf0&Dbyte);
  85   1        SendByte(0xf0&Dbyte<<4);
  86   1        CS = 0;
  87   1      }
  88          
  89          /******************************************************************
  90                                   lcd初始化函数
  91          *******************************************************************/
  92          void LcmInit( void )
  93          {
  94   1           WriteCommand(0x30);
  95   1           WriteCommand(0x03);
  96   1           WriteCommand(0x0c);
  97   1           WriteCommand(0x01);
  98   1           WriteCommand(0x06);
  99   1      }
 100          
 101          /*******************************************************************************************************
 102                                           设定光标函数
 103          ********************************************************************************************************/
 104          void Location_xy_12864(unsigned char x,unsigned char y)
 105          {
 106   1        switch(x)
 107   1        {
 108   2          case 0:
 109   2            x=0x80;break;
 110   2          case 1:
 111   2            x=0x90;break;
 112   2          case 2:
 113   2            x=0x88;break;
 114   2          case 3:
 115   2            x=0x98;break;
 116   2          default:
 117   2            x=0x80;
C51 COMPILER V9.60.0.0   LCD12864                                                          03/24/2023 19:33:34 PAGE 3   

 118   2        }
 119   1        y=y&0x07;
 120   1        WriteCommand(0x30);
 121   1        WriteCommand(y+x);
 122   1        WriteCommand(y+x);
 123   1      
 124   1      }
 125          /***********************************************************************************
 126                            清除文本
 127          ************************************************************************************/
 128          void LcmClearTXT( void )
 129          {
 130   1        unsigned char i;
 131   1        WriteCommand(0x30);
 132   1        WriteCommand(0x80);
 133   1        for(i=0;i<64;i++)
 134   1        WriteData(0x20);
 135   1        Location_xy_12864(0,0);     
 136   1      }
 137          /**************************************************************************************
 138                             清除图片
 139          *****************************************************************************************/
 140          /*
 141          void LcmClearBMP( void )
 142          {
 143            unsigned char i,j;
 144            WriteCommand(0x34);
 145            WriteCommand(0x36);
 146            for(i=0;i<32;i++)
 147            {
 148              WriteCommand(0x80|i);
 149              WriteCommand(0x80);
 150              for(j=0;j<32;j++)
 151              WriteData(0);
 152            }
 153          }
 154          */
 155          //显示温度
 156          
 157          
 158          /****************************************************************************************
 159                                显示字符串
 160          *****************************************************************************************/
 161          void PutStr(unsigned char row,unsigned char col,unsigned char *puts)
 162          {    
 163   1        WriteCommand(0x30);
 164   1        WriteCommand(AC_TABLE[8*row+col]);
 165   1        while(*puts != '\0')
 166   1        {
 167   2          if(col==8)
 168   2          {
 169   3            col=0;
 170   3            row++;
 171   3          }
 172   2          if(row==4) row=0;
 173   2          WriteCommand(AC_TABLE[8*row+col]);
 174   2          WriteData(*puts);
 175   2          puts++;
 176   2          if(*puts != '\0')
 177   2          {
 178   3            WriteData(*puts);
 179   3            puts++;
C51 COMPILER V9.60.0.0   LCD12864                                                          03/24/2023 19:33:34 PAGE 4   

 180   3            col++;
 181   3          }  
 182   2        }
 183   1      }
 184          /*
 185          //显示一个四位的数字
 186          void PutNum(unsigned char row,unsigned char col,unsigned int num)
 187          {
 188              WriteCommand(0x30);
 189              WriteCommand(AC_TABLE[8*row+col]);
 190              WriteData((num/1000)+48);
 191              WriteData(((num%1000)/100)+48);
 192              WriteData(((num%100)/10)+48);
 193              WriteData((num%10)+48);   
 194          }*/
 195          
 196          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
